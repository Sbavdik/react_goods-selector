{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleSelect","good","setState","handleClear","isGoodSelected","this","className","length","type","onClick","map","isSelectedGood","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,YAAc,WACZ,EAAKD,SAAS,CAAEH,aAAc,MAVlC,EAaEK,eAAiB,SAACH,GAChB,OAAOA,IAAS,EAAKH,MAAMC,cAd/B,4CAiBE,WAAU,IAAD,OACCA,EAAiBM,KAAKP,MAAtBC,aACAI,EAAgBE,KAAhBF,YAER,OACE,uBAAMG,UAAU,oBAAhB,UACGP,EAAaQ,OAEV,qBAAID,UAAU,sCAAd,oBACMP,EADN,gBAIE,wBACE,UAAQ,cACRS,KAAK,SACLF,UAAU,cACVG,QAASN,OAIb,oBAAIG,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGV,EAAMc,KAAI,SAAAT,GACT,IAAMU,EAAiBV,IAASF,EAEhC,OACE,qBACE,UAAQ,OAERO,UAAWM,IACT,CAAE,+BAAgCD,IAJtC,UAOE,6BACI,EAAKP,eAAeH,GAclB,wBACE,UAAQ,eACRO,KAAK,SACLF,UAAU,iBACVG,QAASN,EAJX,eAZA,wBACE,UAAQ,YACRK,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKT,aAAaC,IALtB,iBAuBN,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGL,MAhCEA,iBA/CvB,GAAyBY,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63403d49.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelect = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  handleClear = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  isGoodSelected = (good: string) => {\n    return good === this.state.selectedGood;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const { handleClear } = this;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood.length\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={handleClear}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelectedGood = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': isSelectedGood },\n                  )}\n                >\n                  <td>\n                    {!this.isGoodSelected(good)\n                      ? (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.handleSelect(good);\n                          }}\n                        >\n                          +\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={handleClear}\n                        >\n                          -\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}